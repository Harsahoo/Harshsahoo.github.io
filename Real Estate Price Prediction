# Import necessary libraries
import pandas as pd
from sklearn.model_selection import train_test_split
from sklearn.linear_model import LinearRegression
from sklearn.metrics import mean_squared_error
import numpy as np

# Load your dataset (replace 'your_data.csv' with your actual dataset file)
data = pd.read_csv('your_data.csv')

# Data preprocessing: Handle missing values, encoding, and feature selection

# Split the data into features (X) and the target variable (y)
X = data[['Feature1', 'Feature2', 'Feature3']]  # Replace with actual feature names
y = data['Price']  # Replace with the actual target column

# Split the data into training and testing sets
X_train, X_test, y_train, y_test = train_test_split(X, y, test_size=0.2, random_state=42)

# Create and train a linear regression model
model = LinearRegression()
model.fit(X_train, y_train)

# Make predictions on the test set
y_pred = model.predict(X_test)

# Evaluate the model (you can use different evaluation metrics)
mse = mean_squared_error(y_test, y_pred)
rmse = np.sqrt(mse)

print(f"Root Mean Squared Error: {rmse}")

# Now you can use the trained model to make predictions for new data
# For example, if you have a new set of features in a dictionary 'new_data':
# new_price = model.predict(pd.DataFrame([new_data]))
